//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _OBJECTTASK_HH
#define _OBJECTTASK_HH

#include "ObjectTaskCore.hh"
#include <unordered_map>

class ObjectTask : public ObjectTaskCore
{
private:
  using ObjectEnvironment = CommObjectRecognitionObjects::
    CommObjectRecognitionEnvironment;
  using BumpState = CommObjectRecognitionObjects::
    CommObjectRecognitionEventBumpState;
  using BaseState = CommBasicObjects::CommBaseState;
  using SimpleRecognition = CommObjectRecognitionObjects::ObjectsSimpleRecognitionTypes;
  using SimpleObjects = CommObjectRecognitionObjects::SimpleObjects;
  
  double object_bump_threshold_;
  std::string object_bump_type_;
  static const std::unordered_map<std::string, SimpleObjects> obj_str_enum;

  static std::unordered_map<std::string, SimpleObjects> createObjStrToEnumMap();

  void checkBump(const ObjectEnvironment& obj, const BaseState& base);
  void objectSimpleRecognition(const ObjectEnvironment& obj);

public:
  ObjectTask(SmartACE::SmartComponent *comp);
  virtual ~ObjectTask();

  virtual int on_entry();
  virtual int on_execute();
  virtual int on_exit();
};

#endif

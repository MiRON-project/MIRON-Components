//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _CAMERARECOGNITIONTASK_HH
#define _CAMERARECOGNITIONTASK_HH

#include "Utils.hpp"

#include "CommBasicObjects/CommBasePose.hh"
#include "CommBasicObjects/CommBaseState.hh"
#include "CommBasicObjects/CommBaseVelocity.hh"
#include <DomainVision/CommRGBDImage.hh>
#include <DomainVision/CommVideoImage.hh>
#include "CameraRecognitionTaskCore.hh"

#include <webots/Camera.hpp>
#include <webots/Robot.hpp>

#include <thread>

// modify these parameters for unit consistency
#define M_TO_CM 100.0      // conversion factor
#define M_TO_MM 1000.0     // conversion factor
#define S_TO_MS 1000.0     // conversion factor

class CameraRecognitionTask  : public CameraRecognitionTaskCore
{
private:
	int webotsTimeStep;
	int imageCounter;
	webots::Camera *wbcamera;

	// communication object
	CommBasicObjects::CommBaseState baseState;

	// threading stuff
	std::thread _thread;
	bool _threadRunning;
	bool _wbShouldQuit;
	void runStep(webots::Robot *robot);

	void recognition();
public:
	CameraRecognitionTask(SmartACE::SmartComponent *comp);
	virtual ~CameraRecognitionTask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();
};

#endif

//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "SpeechTask.hh"
#include "ComponentWebotsHRI.hh"

#include <iostream>

SpeechTask::SpeechTask(SmartACE::SmartComponent *comp) 
:	SpeechTaskCore(comp)
{
	std::cout << "constructor SpeechTask\n";
}
SpeechTask::~SpeechTask() 
{
	std::cout << "destructor SpeechTask\n";
}



int SpeechTask::on_entry()
{
	return 0;
}
int SpeechTask::on_execute()
{
	COMP->mutex.acquire();

	if (COMP->obj_place_msg.getObjectType() != "") {
		objectPlacementPushServiceOutPut(COMP->obj_place_msg);
		COMP->obj_place_msg.setObjectType("");
	}

	if (COMP->obj_drop_msg.getObj_carried_index() > -2){
		objectDropPushServiceOutPut(COMP->obj_drop_msg);
		COMP->obj_drop_msg.setObj_carried_index(-2);
	}
	
	COMP->mutex.release();
	return 0;
}
int SpeechTask::on_exit()
{
	// use this method to clean-up resources which are initialized in on_entry() and needs to be freed before the on_execute() can be called again
	return 0;
}

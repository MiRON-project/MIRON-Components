//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _STATICGLOBALPLANNER_HH
#define _STATICGLOBALPLANNER_HH

#include "StaticGlobalPlannerCore.hh"
#include <BoundingBoxValidityChecker.hh>

// ompl
#include <ompl/base/spaces/RealVectorBounds.h>
#include <ompl/geometric/SimpleSetup.h>

class StaticGlobalPlanner : public StaticGlobalPlannerCore
{
private:
  CommBasicObjects::CommBaseState robot_pose;
  std::vector<Eigen::AlignedBox2d> obstacles;
  bool obstacles_init;
  bool replan;
  bool planned;
  CommNavigationObjects::CommPlannerGoal goal;
  Eigen::AlignedBox2d robot_footprint;
  CommNavigationObjects::BoundingBox sample_space;
  CommRobotinoObjects::CommNavigationPaths path;

  std::shared_ptr<ompl::base::SE2StateSpace> space;
  ompl::geometric::SimpleSetupPtr simple_setup_;
  ompl::base::MotionValidatorPtr motion_checker;
  void ObstaclesServiceIn(const CommNavigationObjects::BoundingBoxes &input);

public:
  StaticGlobalPlanner(SmartACE::SmartComponent *comp);
  CommRobotinoObjects::CommPathNavigationGoal PlannerGoalServiceIn(const CommNavigationObjects::CommPlannerGoal &input);
  virtual ~StaticGlobalPlanner();

  virtual int on_entry();
  virtual int on_execute();
  virtual int on_exit();
};

#endif
